{"version":3,"sources":["app.js"],"names":["processData","data","keys","push","apply","_toConsumableArray","drumsHTML","map","key","audioFile","letter","label","join","forEach","drumSoundFile","soundKey","sounds","Audio","oncanplaythrough","document","querySelector","innerHTML","playSound","drumSound","drumElement","sound","currentTime","play","classList","add","setTimeout","remove","clickEvent","e","target","matches","getAttribute","parentNode","keydownEvent","console","log","keyCode","drum","find","item","keycode","undefined","drumSelector","fetch","then","response","json","catch","err","error","addEventListener"],"mappings":"sJAAA,IAIWA,YAAT,SAAqBC,GACnBC,KAAKC,KAALC,MAAAF,KAAAG,mBAAaJ,IAGb,IAAMK,EAAYJ,KAAKK,IAAI,SAAAC,GAAA,MAAA,uBACFA,EAAIC,UADF,qDAEKD,EAAIE,OAFT,8CAGKF,EAAIG,MAHT,+BAKzBC,KAAK,IAGPV,KAAKW,QAAQ,SAACL,GACZ,IAAMM,EAAAA,UAA0BN,EAAIC,UAA9B,OAEAM,EAAWP,EAAIC,UACrBO,OAAOD,GAAY,IAAIE,MAAMH,GAC7BE,OAAOD,GAAUG,iBAHK,KAMxBC,SAASC,cAAc,iBAAiBC,UAAYf,GAI7CgB,UAAT,SAAmBC,EAAWC,GAC5B,IAAMC,EAAQF,EACdE,EAAMC,YAAc,EACpBD,EAAME,OACNH,EAAYI,UAAUC,IAAI,aAE1BC,WAAW,WACTN,EAAYI,UAAUG,OAAO,cAC5B,MAGIC,WAAT,SAAoBC,GAClB,GAAIA,EAAEC,OAAOC,QAAQ,gBAAiB,CACpC,IAAMX,EAAcS,EAAEC,OAAOE,aAAa,cAAgBH,EAAEC,OAASD,EAAEC,OAAOG,WACxEZ,EAAQT,OAAOQ,EAAYY,aAAa,eAC9Cd,UAAUG,EAAOD,KAIZc,aAAT,SAAsBL,GACpBM,QAAQC,IAAIP,EAAEQ,SACd,IAAMC,EAAOxC,KAAKyC,KAAK,SAAAC,GAAA,OAASA,EAAKC,UAAYZ,EAAEQ,UACnD,QAAaK,IAATJ,EAAJ,CACA,IAAMjC,EAAYiC,EAAKjC,UACjBc,EAAYP,OAAOP,GACnBsC,EAAAA,oBAAmCtC,EAAnC,KACAe,EAAcL,SAASC,cAAc2B,GAC3CzB,UAAUC,EAAWC,KAtDjBtB,KAAO,GACPc,OAAS,GAwDfgC,MAAM,eACHC,KAAK,SAAAC,GAAA,OAAYA,EAASC,SAC1BF,KAAK,SAAAhD,GAAA,OAAQD,YAAYC,KACzBmD,MAAM,SAAAC,GAAA,OAAOd,QAAQe,MAAMD,KAE9BlC,SAASoC,iBAAiB,QAASvB,YACnCb,SAASoC,iBAAiB,UAAWjB","file":"_build.js","sourcesContent":["{\n  const keys = [];\n  const sounds = [];\n\n  function processData(data) {\n    keys.push(...data);\n\n    // Generate the markup.\n    const drumsHTML = keys.map(key =>\n      `<button data-sound=\"${key.audioFile}\" class=\"key\">\n         <span class=\"key-letter\">${key.letter}</span>\n         <label class=\"key-label\">${key.label}</label>\n       </button>`,\n    ).join('');\n\n    // Preload the audio files for quicker playback.\n    keys.forEach((key) => {\n      const drumSoundFile = `sounds/${key.audioFile}.mp3`;\n      const isAudioLoaded = '';\n      const soundKey = key.audioFile;\n      sounds[soundKey] = new Audio(drumSoundFile);\n      sounds[soundKey].oncanplaythrough = isAudioLoaded;\n    });\n\n    document.querySelector('.keys-wrapper').innerHTML = drumsHTML;\n  }\n\n  // Play the sound and add temporary CSS class.\n  function playSound(drumSound, drumElement) {\n    const sound = drumSound;\n    sound.currentTime = 0;\n    sound.play();\n    drumElement.classList.add('js-active');\n\n    setTimeout(() => {\n      drumElement.classList.remove('js-active');\n    }, 100);\n  }\n\n  function clickEvent(e) {\n    if (e.target.matches('.key, .key *')) {\n      const drumElement = e.target.getAttribute('data-sound') ? e.target : e.target.parentNode;\n      const sound = sounds[drumElement.getAttribute('data-sound')];\n      playSound(sound, drumElement);\n    }\n  }\n\n  function keydownEvent(e) {\n    console.log(e.keyCode);\n    const drum = keys.find(item => (item.keycode === e.keyCode));\n    if (drum === undefined) return;\n    const audioFile = drum.audioFile;\n    const drumSound = sounds[audioFile];\n    const drumSelector = `.key[data-sound=\"${audioFile}\"]`;\n    const drumElement = document.querySelector(drumSelector);\n    playSound(drumSound, drumElement);\n  }\n\n  fetch('sounds.json')\n    .then(response => response.json())\n    .then(data => processData(data))\n    .catch(err => console.error(err));\n\n  document.addEventListener('click', clickEvent);\n  document.addEventListener('keydown', keydownEvent); // @todo move to keypress instead of keydown.\n}\n"]}