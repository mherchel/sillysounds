{"version":3,"sources":["app.js"],"names":["processData","data","keys","push","drumsHTML","map","key","audioFile","letter","label","join","forEach","drumSoundFile","isAudioLoaded","soundKey","sounds","Audio","oncanplaythrough","document","querySelector","innerHTML","playSound","drumSound","drumElement","sound","currentTime","play","classList","add","setTimeout","remove","clickEvent","e","target","matches","getAttribute","parentNode","keydownEvent","drum","find","item","keycode","keyCode","undefined","drumSelector","fetch","then","response","json","catch","console","error","err","addEventListener"],"mappings":";;;;AAAA;AAAA,MAIWA,WAJX,GAIE,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACzBC,SAAKC,IAAL,gCAAaF,IAAb;;AAEA;AACA,QAAMG,YAAYF,KAAKG,GAAL,CAAS;AAAA,sCACFC,IAAIC,SADF,0DAEKD,IAAIE,MAFT,mDAGKF,IAAIG,KAHT;AAAA,KAAT,EAKhBC,IALgB,CAKX,EALW,CAAlB;;AAOA;AACAR,SAAKS,OAAL,CAAa,UAACL,GAAD,EAAS;AACpB,UAAMM,4BAA0BN,IAAIC,SAA9B,SAAN;AACA,UAAMM,gBAAgB,EAAtB;AACA,UAAMC,WAAWR,IAAIC,SAArB;AACAQ,aAAOD,QAAP,IAAmB,IAAIE,KAAJ,CAAUJ,aAAV,CAAnB;AACAG,aAAOD,QAAP,EAAiBG,gBAAjB,GAAoCJ,aAApC;AACD,KAND;;AAQAK,aAASC,aAAT,CAAuB,eAAvB,EAAwCC,SAAxC,GAAoDhB,SAApD;AACD,GAzBH;;AA2BE;;;AA3BF,MA4BWiB,SA5BX,GA4BE,SAASA,SAAT,CAAmBC,SAAnB,EAA8BC,WAA9B,EAA2C;AACzC,QAAMC,QAAQF,SAAd;AACAE,UAAMC,WAAN,GAAoB,CAApB;AACAD,UAAME,IAAN;AACAH,gBAAYI,SAAZ,CAAsBC,GAAtB,CAA0B,WAA1B;;AAEAC,eAAW,YAAM;AACfN,kBAAYI,SAAZ,CAAsBG,MAAtB,CAA6B,WAA7B;AACD,KAFD,EAEG,GAFH;AAGD,GArCH;;AAAA,MAuCWC,UAvCX,GAuCE,SAASA,UAAT,CAAoBC,CAApB,EAAuB;AACrB,QAAIA,EAAEC,MAAF,CAASC,OAAT,CAAiB,cAAjB,CAAJ,EAAsC;AACpC,UAAMX,cAAcS,EAAEC,MAAF,CAASE,YAAT,CAAsB,YAAtB,IAAsCH,EAAEC,MAAxC,GAAiDD,EAAEC,MAAF,CAASG,UAA9E;AACA,UAAMZ,QAAQT,OAAOQ,YAAYY,YAAZ,CAAyB,YAAzB,CAAP,CAAd;AACAd,gBAAUG,KAAV,EAAiBD,WAAjB;AACD;AACF,GA7CH;;AAAA,MA+CWc,YA/CX,GA+CE,SAASA,YAAT,CAAsBL,CAAtB,EAAyB;AACvB,QAAMM,OAAOpC,KAAKqC,IAAL,CAAU;AAAA,aAASC,KAAKC,OAAL,KAAiBT,EAAEU,OAA5B;AAAA,KAAV,CAAb;AACA,QAAIJ,SAASK,SAAb,EAAwB;AACxB,QAAMpC,YAAY+B,KAAK/B,SAAvB;AACA,QAAMe,YAAYP,OAAOR,SAAP,CAAlB;AACA,QAAMqC,qCAAmCrC,SAAnC,OAAN;AACA,QAAMgB,cAAcL,SAASC,aAAT,CAAuByB,YAAvB,CAApB;AACAvB,cAAUC,SAAV,EAAqBC,WAArB;AACD,GAvDH;;AACE,MAAMrB,OAAO,EAAb;AACA,MAAMa,SAAS,EAAf;;AAuDA8B,QAAM,aAAN,EACGC,IADH,CACQ;AAAA,WAAYC,SAASC,IAAT,EAAZ;AAAA,GADR,EAEGF,IAFH,CAEQ;AAAA,WAAQ9C,YAAYC,IAAZ,CAAR;AAAA,GAFR,EAGGgD,KAHH,CAGS;AAAA,WAAOC,QAAQC,KAAR,CAAcC,GAAd,CAAP;AAAA,GAHT;;AAKAlC,WAASmC,gBAAT,CAA0B,OAA1B,EAAmCtB,UAAnC;AACAb,WAASmC,gBAAT,CAA0B,SAA1B,EAAqChB,YAArC,EA/DF,CA+DsD;AACrD","file":"_build.js","sourcesContent":["{\n  const keys = [];\n  const sounds = [];\n\n  function processData(data) {\n    keys.push(...data);\n\n    // Generate the markup.\n    const drumsHTML = keys.map(key =>\n      `<button data-sound=\"${key.audioFile}\" class=\"key\">\n         <span class=\"key-letter\">${key.letter}</span>\n         <label class=\"key-label\">${key.label}</label>\n       </button>`,\n    ).join('');\n\n    // Preload the audio files for quicker playback.\n    keys.forEach((key) => {\n      const drumSoundFile = `sounds/${key.audioFile}.mp3`;\n      const isAudioLoaded = '';\n      const soundKey = key.audioFile;\n      sounds[soundKey] = new Audio(drumSoundFile);\n      sounds[soundKey].oncanplaythrough = isAudioLoaded;\n    });\n\n    document.querySelector('.keys-wrapper').innerHTML = drumsHTML;\n  }\n\n  // Play the sound and add temporary CSS class.\n  function playSound(drumSound, drumElement) {\n    const sound = drumSound;\n    sound.currentTime = 0;\n    sound.play();\n    drumElement.classList.add('js-active');\n\n    setTimeout(() => {\n      drumElement.classList.remove('js-active');\n    }, 100);\n  }\n\n  function clickEvent(e) {\n    if (e.target.matches('.key, .key *')) {\n      const drumElement = e.target.getAttribute('data-sound') ? e.target : e.target.parentNode;\n      const sound = sounds[drumElement.getAttribute('data-sound')];\n      playSound(sound, drumElement);\n    }\n  }\n\n  function keydownEvent(e) {\n    const drum = keys.find(item => (item.keycode === e.keyCode));\n    if (drum === undefined) return;\n    const audioFile = drum.audioFile;\n    const drumSound = sounds[audioFile];\n    const drumSelector = `.key[data-sound=\"${audioFile}\"]`;\n    const drumElement = document.querySelector(drumSelector);\n    playSound(drumSound, drumElement);\n  }\n\n  fetch('sounds.json')\n    .then(response => response.json())\n    .then(data => processData(data))\n    .catch(err => console.error(err));\n\n  document.addEventListener('click', clickEvent);\n  document.addEventListener('keydown', keydownEvent); // @todo move to keypress instead of keydown.\n}\n"]}